[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".


[gcode_macro START_PRINT]
gcode:
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.T_BED}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.T_TOOL}
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.T_BED}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.T_TOOL}
  G28
  BED_MESH_PROFILE LOAD=p1
  SAVE_GCODE_STATE NAME=WIPE_LINE_state
  M82
  G90
  G92 E0
  G1 X5 Y20 Z5 F3000
  G1 Z0.3 F3000
  G1 X5 Y150 F1500 E10.83
  G1 X6 F5000
  G1 Y22 F1500 E21.5
  G1 Y20 F5000
  G1 Z1
  RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0

[gcode_macro END_PRINT]
gcode:
    M140 S0
    M104 S0
    M106 S0
    G91
    G1 X-2 Y-2 E-5 F300
    G1 Z30 F3000
    G90
    M84


[gcode_macro G29]
gcode:
 SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=50
 SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
 G28
 TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=50
 TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150  
 Z_TILT_ADJUST
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1
 G1 X0 Y0 Z5 F3000
 SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
 SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

[output_pin BEEPER_pin]
pin: PG11
pwm: false
value: 0
shutdown_value: 0

[gcode_macro M300]
description: Beeper macro
gcode:
  SET_PIN PIN=BEEPER_Pin VALUE=1
  G4 P{params.P|default(150)|int}
  SET_PIN PIN=BEEPER_Pin VALUE=0
[gcode_macro BEEP]
gcode:
  M300 P100
[gcode_macro BEEP_TWICE]
gcode:
  M300 P100
  M300 P100
[gcode_macro BEEP_LONG]
gcode:
  M300 P500

[gcode_macro QUERY_BME280]
gcode:
    {% set sensor = printer["bme280 my_sensor"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.pressure,
            sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode:
    {% set sensor = printer["htu21d my_sensor"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.humidity))}

[sdcard_loop]

[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PID_BED60]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro PID_HOTEND200]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=200


[gcode_macro Probe_Offset]
gcode:
    PROBE_CALIBRATE
    
[gcode_macro Z_UP]
gcode:
    TESTZ Z=+

[gcode_macro Z_DOWN]
gcode:
    TESTZ Z=-
