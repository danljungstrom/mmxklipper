# This file contains common pin mappings for the Mingda Magician X
# Magician X To use this config, the firmware should be compiled for the
# STM32F407 with a "64KiB bootloader" and USB communication PA11/PA12 it will connect to the USB A port.

# The "make flash" command does not work on the Mingda. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
#stm32 f407 64kb bootloader and 8mhz clock usb a

[include macros.cfg]
[include mainsail.cfg]



[stepper_x] #TMC2208
step_pin: PD2
dir_pin: PC10
enable_pin: !PD3
microsteps: 16
rotation_distance: 40
endstop_pin: !PF12
position_endstop: 0
position_max: 230
homing_speed: 50

[tmc2208 stepper_x] #TMC2208
uart_pin: PD6
#tx_pin: PD6
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y] #TMC2208
step_pin: PA10
dir_pin: !PA9
enable_pin: !PC12
microsteps: 16
rotation_distance: 40
endstop_pin: !PF14
position_endstop: 0
position_max: 230
homing_speed: 50

[tmc2208 stepper_y] #TMC2208
uart_pin: PC11
#tx_pin: PC11
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z] #TMC2208
step_pin: PG8
dir_pin: !PG7
enable_pin: !PC9
microsteps: 16
rotation_distance: 4
endstop_pin: !PG0
#endstop_pin: probe:z_virtual_endstop
position_min: -15 # The Z carriage may need to travel below the Z=0
                 # homing point if the bed has a significant tilt.
position_endstop: 5.0
position_max: 260

[tmc2208 stepper_z] #TMC2208
uart_pin: PA8
#tx_pin: PA8
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z1]
step_pin: PG4
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 4



[tmc2208 stepper_z1]
uart_pin: PG6
#tx_pin: PC10
#uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

#[stepper_z1]
##step_pin: PG4
#dir_pin: PG3
#enable_pin: !PG5
#microsteps: 16
#rotation_distance: 4

#[tmc2209 stepper_z1]
#uart_pin: PCG6
#tx_pin: PC10
#uart_address: 1
#run_current: 0.580
#stealthchop_threshold: 999999

[extruder]
step_pin: PD12
dir_pin: !PD11
enable_pin: !PD13
microsteps: 16
rotation_distance: 8

nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC6
sensor_type: EPCOS 100K B57560G104F #60 : 100k Maker's Tool Works Kapton Bed Thermistor beta=3950
sensor_pin: PC4 
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

[tmc2208 extruder]
uart_pin: PG2
#tx_pin: PC10
uart_address: 0
run_current: 0.650
stealthchop_threshold: 999999

# Define a probe
[probe]
pin: !PB0
z_offset: 2.345

# The safe_z_home section modifies the default G28 behavior
[safe_z_home]
home_xy_position: 115, 115
speed: 50
z_hop: 15
z_hop_speed: 5

[bed_mesh]
speed: 120
mesh_min: 20, 20
mesh_max: 200, 197
probe_count: 4,4
algorithm: bicubic

[z_tilt]
#z_positions:
z_positions:15,115
   215,115
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.

points:35,115
   200,115
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 7
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 10
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.01
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[heater_bed]
heater_pin: PC8
sensor_type: ATC Semitec 104GT-2 #60 : 100k Maker's Tool Works Kapton Bed Thermistor beta=3950
sensor_pin: PC5
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15

#[fan]
#pin: PC7

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_270035001550324834383320-if00
#serial: /dev/ttyAMA0
#restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 800
max_z_velocity: 4
max_z_accel: 100

[filament_switch_sensor toolhead_runout]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
pause_on_runout: FALSE
runout_gcode: {action_respond_info("RUNOUT: Toolhead Filament runout")}
#  PAUSE
insert_gcode: {action_respond_info("RUNOUT: Toolhead Filament inserted")}
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
##    XYE mcu E1DET
switch_pin: ^PG1


#[board_pins]
#aliases:
    # EXP1 header
  #  EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
   # EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[neopixel my_neopixel]
pin:PB9
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count:
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

# See the sample-lcd.cfg file for definitions of common LCD displays.

#marlin configs
#define X_ENABLE_PIN       PD3
#define X_STEP_PIN         PD2
#define X_DIR_PIN          PC10
#define Y_ENABLE_PIN       PC12
#define Y_STEP_PIN         PA10
#define Y_DIR_PIN          PA9
#define Z_ENABLE_PIN       PC9
#define Z_STEP_PIN         PG8
#define Z_DIR_PIN          PG7
#define E0_ENABLE_PIN      PD13
#define E0_STEP_PIN        PD12
#define E0_DIR_PIN         PD11
#define Z2_ENABLE_PIN      PG5
#define Z2_STEP_PIN        PG4
#define Z2_DIR_PIN         PG3
#define LED_RED_PIN        PG9
#define Z_MIN_PIN          PG0
#define Y_MIN_PIN          PF14
#define X_MIN_PIN          PF12
#define Z_MIN_PROBE_PIN    PB0

#TMC2208 UARTS
#define X_SERIAL_TX_PIN  PD6
#define X_SERIAL_RX_PIN  PD6

#define Y_SERIAL_TX_PIN  PC11
#define Y_SERIAL_RX_PIN  PC11

#define Z_SERIAL_TX_PIN  PA8
#define Z_SERIAL_RX_PIN  PA8

#define E0_SERIAL_TX_PIN PG2
#define E0_SERIAL_RX_PIN PG2

#define Z2_SERIAL_TX_PIN PG6
#define Z2_SERIAL_RX_PIN PG6



#define CALIB_PIN          PB1
#PS_ON_PIN        PA1
#TEMP_CHAMBER_PIN                  PC3 
#define USB_CONNECT_PIN    PA15
#define USB_CONNECT_INVERTING false
#define SD_DETECT_PIN      PE3
#define BEEPER_PIN         PG11
#define LED_PIN            PG9
#define NEOPIXEL_PIN       PB9
#define SDIO_D0_PIN                         PA6
#define SDIO_D1_PIN                         PC9
#define SDIO_D2_PIN                         PC10
#define SDIO_D3_PIN                         PA4
#define SDIO_CK_PIN                         PA5
#define SDIO_CMD_PIN                        PA7
#define ESP_WIFI_MODULE_COM                    6  // Must also set either SERIAL_PORT or SERIAL_PORT_2 to this
#define ESP_WIFI_MODULE_BAUDRATE        BAUDRATE  // Must use same BAUDRATE as SERIAL_PORT & SERIAL_PORT_2
#define ESP_WIFI_MODULE_RESET_PIN           PE5
#define ESP_WIFI_MODULE_ENABLE_PIN          PE4
#define ESP_WIFI_MODULE_GPIO0_PIN           ESP_WIFI_MODULE_ENABLE_PIN
#define LCD_BACKLIGHT_PIN   PG10
#define FSMC_CS_PIN         PD7   // FSMC_NE1
#define FSMC_RS_PIN         PE2   // A23 Register. Only one address needed
#define TFT_CS_PIN          FSMC_CS_PIN
#define TFT_RS_PIN          FSMC_RS_PIN
#define TFT_BACKLIGHT_PIN   LCD_BACKLIGHT_PIN
#define LCD_USE_DMA_FSMC   // Use DMA transfers to send data to the TFT
#define FSMC_DMA_DEV       DMA1
#define FSMC_DMA_CHANNEL   DMA_CH4  //fixme in F4
#define TOUCH_CS_PIN     PB6
#define TOUCH_SCK_PIN    PB3
#define TOUCH_MOSI_PIN   PB5
#define TOUCH_MISO_PIN   PB4 
#define TOUCH_INT_PIN    PB7 // PenIRQ coming from XPT2046